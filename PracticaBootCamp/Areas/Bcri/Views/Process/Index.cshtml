@using Newtonsoft.Json
@using DNF.Security.Bussines
@{var Res = PracticaBootCamp.Res.res;}
@{
    ViewBag.Title = Res.process;
}
<div class="ibox">
    <div class="ibox-title">
        <h5>@Res.process</h5>
        <div class="ibox-tools">
            <a class="collapse-link">
                <i class="fa fa-chevron-up"></i>
            </a>
        </div>
    </div>
    <div class="ibox-content">
        <div class="row">
            <div class="form-group col-lg-6">
                @Html.DropDownList("selectProcess", (List<SelectListItem>)ViewBag.tmpProcess, new { @class = "form-control", placeholder = @Res.selectProcess })
            </div>
            <div class="form-group col-lg-6">
                @if (Current.User.HasAccess("Developer"))
                {
                    <a title="Add" id="newProcessConfig" type="button" href="" class="btn btn-default btn-circle btn-config ">
                        <i class="fa fa-plus"></i>
                    </a>
                }

            </div>
        </div>
    </div>
</div>
<div class="row" hidden id="formNew">
    @*Modal de procesos nuevos*@
    <div class="col-lg-12">
        <div id="configSaveAlert"></div>
        <form id="configForm">
            <div class="row">
                <div class="col-lg-12">
                    @*
                        En caso de necesitar agregar cosas hay que revisar el ancho del modal y
                        cambiar esta clase a col-lg-(2,3,4,6 dependiendo de la cantidad de cosas que se le quieran sumar)
                    *@
                    @Html.Hidden("Id", 0)
                    <div class="form-group">
                        <label>@Res.type</label>
                        @Html.DropDownList("Type_Id", (List<SelectListItem>)ViewBag.ProcessTypes, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>@Res.name</label>
                        @Html.TextBox("Name", "", new { @class = "form-control", Required = true })
                        <p class="help-block">@Res.helpBlockDisplayName</p>
                    </div>
                    <div class="form-group">
                        <label>@Res.code</label>
                        @Html.TextBox("Code", "", new { @class = "form-control", maxlength = 50, Required = true })
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div id="ProcessJsData"
     data-loaddataurl="@Url.Action(string.Empty, "Process")">
</div>
@section scripts {
    @Scripts.Render("~/Areas/Bcri/Views/Process/Index.js")
}


