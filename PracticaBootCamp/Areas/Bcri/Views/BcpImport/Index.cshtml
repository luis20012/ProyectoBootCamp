@model Bcri.Core.Bussines.BcpImport
@using DNF.Security.Bussines
@{var Res = PracticaBootCamp.Res.res;}
@{
    Layout = "";
}

<div class="ibox">
    <div class="ibox-title">
        <h5>@Res.bcpimport</h5>
        <div class="ibox-tools">
            <a class="collapse-link">
                <i class="fa fa-chevron-up"></i>
            </a>
        </div>
    </div>
    <div class="ibox-content">
        <form id="bcpForm">

            <div id="bcpSaveAlert"></div>
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.ProcessConfig.Id)
            <div class="form-group">
                <label>@Res.repositoryResult</label>
                @Html.DropDownListFor(x => x.RepositoryCode, (List<SelectListItem>)ViewBag.Repositorys, new { @class = "form-control" })
            </div>
            <div class="radio">
                <label><input type="radio" name="bcptype" @(Model.SqlSource ? "checked" : "") value="Db">@Res.db</label>
                <label><input type="radio" name="bcptype" @(!Model.SqlSource ? "checked" : "") value="File">@Res.file</label>
            </div>
            <div id="formDb">
                <div class="form-group">
                    <label>Sql Server</label>
                    @Html.DropDownListFor(x => x.Conexion.Id, (List<SelectListItem>)ViewBag.Conexions, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label>Sql</label>
                    @Html.TextAreaFor(x => x.SqlCommand, new { @class = "form-control" })
                    <p class="help-block">@Res.sqltext </p>
                </div>
            </div>
            <div id="formFile">
                <div class="form-group">
                    <label>Path</label>
                    @Html.TextBoxFor(x => x.Path, new { @class = "form-control", maxlength = "255" })
                    <p class="help-block">@Res.pathtext</p>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(x => x.HasHeaderRow)
                            @Res.hasheaderrow
                        </label>
                        <p class="help-block">@Res.firstrowcolumnname</p>
                    </div>
                </div>
                <div class="radio">
                    <label><input type="radio" name="filetype" @(!Model.Delimited ? "checked" : "") value="Fixed">@Res.fixedlength</label>
                    <label><input type="radio" name="filetype" @(Model.Delimited ? "checked" : "") value="Delimited">@Res.delimitedcolumns</label>
                </div>
                <div id="Delimited">
                    <div class="form-group">
                        <label>@Res.delimiter</label>
                        @Html.TextBoxFor(x => x.Delimiter, new { @class = "form-control", maxlength = "1" })
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(x => x.EnclosedInQuotes)
                                @Res.enclosedinquotes
                            </label>
                            <p class="help-block">@Res.everyvalueenclosedinquotes</p>
                        </div>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-lg-12">
                    <button type="submit" id="bcpSave" class="btn btn-default">@Res.save</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/Areas/Bcri/Views/BcpImport/Index.js")
}

