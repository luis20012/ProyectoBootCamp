@model PracticaBootCamp.Bussines.Student

@{
    Layout = "~/Views/Shared/_LayoutBcri.cshtml";
    List<SelectListItem> stateStudentList = (List<SelectListItem>)ViewBag.stateStudentList;
    List<SelectListItem> userList = (List<SelectListItem>)ViewBag.userList;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm("Edit", "Student", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h1><b>Editar Estudiante</b></h1>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                <label class="control-label col-sm-2">Titulo</label>
                <div class="col-sm-2">
                    @Html.EditorFor(model => model.Tuition, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tuition, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-2">Estado de Actividad</label>
                <div class="col-sm-2">
                    @Html.DropDownListFor(model => model.StateStudent, stateStudentList, null, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.StateStudent, "", new { @class = "text-danger" })
                </div>
                @*<div>
                        <a href="@Url.Action("Create","ActivityStatus")">
                            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                        </a>
                    </div>*@
            </div>
            <div class="form-group">
                <label class="control-label col-sm-2">Usuario</label>
                <div class="col-sm-4">
                    @* Mostrar el nombre del usuario como texto, deshabilitado *@
                    @{
                        var selectedUser = userList.FirstOrDefault(u => u.Value == Model.User.Id.ToString());
                        string userName = selectedUser != null ? selectedUser.Text : "Usuario no encontrado";
                    }
                    <input type="text" class="form-control" value="@userName" disabled />
                    @* Guardar el Id del usuario oculto para que llegue al POST *@
                    @Html.HiddenFor(model => model.User.Id)
                </div>
            </div>






            @if (ViewBag.AlertDuplicateArtistName != null)
            {
                <div class="alert alert-dismissable alert-danger">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>Error!</strong> @ViewBag.AlertDuplicateArtistName
                </div>
            }
            @if (ViewBag.AlertDuplicatePerson != null)
            {
                <div class="alert alert-dismissable alert-danger">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>Warning!</strong> @ViewBag.AlertDuplicatePerson
                </div>
            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-default" />
                </div>
            </div>
        </div>
       
    }

    <div>
        @Html.ActionLink("Volver a la Grilla", "Index")
    </div>
</body>
</html>
